{"version":3,"file":"useWebcam.js","sources":["../../../../../src/components/Webcam/hooks/useWebcam.ts"],"sourcesContent":["import type { RefObject } from 'react';\r\nimport { useRef, useState } from 'react';\r\n\r\nimport type { UseMediaStreamParams } from '@/utils/hooks';\r\nimport { useIsomorphicLayoutEffect, useMediaStream } from '@/utils/hooks';\r\n\r\n/**\r\n * Helps get/set the media stream source for a video element\r\n *\r\n * @param {RefObject<HTMLVideoElement>} videoRef - video element reference object\r\n * @param {UseMediaStreamParams} params - parameters for receiving media stream\r\n * @return {string | undefined} media stream source\r\n */\r\nexport const useWebcam = (\r\n  videoRef: RefObject<HTMLVideoElement>,\r\n  { onStreamStart, onStreamStop, ...params }: UseMediaStreamParams = {}\r\n) => {\r\n  const [streamSource, setStreamSource] = useState<string>();\r\n  const handlerRef = useRef({\r\n    start: onStreamStart,\r\n    stop: onStreamStop\r\n  });\r\n\r\n  useIsomorphicLayoutEffect(() => {\r\n    handlerRef.current = {\r\n      start: onStreamStart,\r\n      stop: onStreamStop\r\n    };\r\n  }, [onStreamStart, onStreamStop]);\r\n\r\n  const handleStreamStart = (stream: MediaStream) => {\r\n    handlerRef.current.start?.(stream);\r\n\r\n    if (videoRef.current && 'srcObject' in videoRef.current) {\r\n      // eslint-disable-next-line no-param-reassign\r\n      videoRef.current.srcObject = stream;\r\n      return;\r\n    }\r\n\r\n    // @ts-ignore\r\n    setStreamSource(window.URL.createObjectURL(stream));\r\n  };\r\n\r\n  const handleStreamStop = (stream?: MediaStream) => {\r\n    handlerRef.current.stop?.(stream);\r\n\r\n    if (!streamSource) return;\r\n    window.URL.revokeObjectURL(streamSource);\r\n  };\r\n\r\n  useMediaStream({\r\n    onStreamStart: handleStreamStart,\r\n    onStreamStop: handleStreamStop,\r\n    ...params\r\n  });\r\n\r\n  return {\r\n    start: handleStreamStart,\r\n    stop: handleStreamStop,\r\n    source: streamSource\r\n  };\r\n};\r\n"],"names":["videoRef","_ref","arguments","length","undefined","onStreamStart","onStreamStop","params","_objectWithoutProperties","_excluded","_useState","useState","_useState2","_slicedToArray","streamSource","setStreamSource","handlerRef","useRef","start","stop","useIsomorphicLayoutEffect","current","handleStreamStart","stream","_handlerRef$current$s","_handlerRef$current","call","srcObject","window","URL","createObjectURL","handleStreamStop","_handlerRef$current$s2","_handlerRef$current2","revokeObjectURL","useMediaStream","_objectSpread","source"],"mappings":";yMAayB,SACvBA,GAEG,IAAAC,EAAAC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADgE,CAAE,EAAnEG,EAAaJ,EAAbI,cAAeC,EAAYL,EAAZK,aAAiBC,EAAMC,EAAAA,yBAAAP,EAAAQ,GAExCC,EAAwCC,EAAAA,WAAkBC,EAAAC,EAAAA,eAAAH,EAAA,GAAnDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAC9BI,EAAaC,EAAAA,OAAO,CACxBC,MAAOb,EACPc,KAAMb,IAGRc,EAAAA,2BAA0B,WACxBJ,EAAWK,QAAU,CACnBH,MAAOb,EACPc,KAAMb,EAEV,GAAG,CAACD,EAAeC,IAEnB,IAAMgB,EAAoB,SAACC,GAAwB,IAAAC,EAAAC,UACjDD,GAAAC,EAAAT,EAAWK,SAAQH,aAAK,IAAAM,GAAxBA,EAAAE,KAAAD,EAA2BF,GAEvBvB,EAASqB,SAAW,cAAerB,EAASqB,QAE9CrB,EAASqB,QAAQM,UAAYJ,EAK/BR,EAAgBa,OAAOC,IAAIC,gBAAgBP,KAGvCQ,EAAmB,SAACR,GAAyB,IAAAS,EAAAC,UACjDD,GAAAC,EAAAjB,EAAWK,SAAQF,YAAI,IAAAa,GAAvBA,EAAAN,KAAAO,EAA0BV,GAErBT,GACLc,OAAOC,IAAIK,gBAAgBpB,IAS7B,OANAqB,EAAAA,eAAcC,EAAAA,eAAA,CACZ/B,cAAeiB,EACfhB,aAAcyB,GACXxB,IAGE,CACLW,MAAOI,EACPH,KAAMY,EACNM,OAAQvB,EAEZ"}