{"version":3,"file":"getUserMedia.js","sources":["../../../../src/helpers/stream/getUserMedia.ts"],"sourcesContent":["import { hasGetUserMedia } from './hasGetUserMedia';\r\n\r\n/**\r\n * Legacy per-browser implementation of Navigator.getUserMedia\r\n *\r\n * @return {Navigator['getUserMedia'] | undefined}\r\n */\r\nexport const getUserMediaFunction =\r\n  typeof window !== 'undefined' &&\r\n  (navigator.getUserMedia ||\r\n    navigator.webkitGetUserMedia ||\r\n    navigator.mozGetUserMedia ||\r\n    navigator.msGetUserMedia);\r\n\r\n/**\r\n * Adds extra error handling and support for legacy getUserMedia implementation\r\n *\r\n * @return {Promise<MediaStream>}\r\n */\r\nexport const getUserMedia = (constraints: MediaStreamConstraints): Promise<MediaStream> => {\r\n  if (!hasGetUserMedia()) {\r\n    if (!getUserMediaFunction) {\r\n      return Promise.reject(\r\n        new Error('Method getUserMedia of Navigator is not implemented in this browser')\r\n      );\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      getUserMediaFunction.call(navigator, constraints, resolve, reject);\r\n    });\r\n  }\r\n\r\n  return navigator.mediaDevices.getUserMedia(constraints);\r\n};\r\n"],"names":["getUserMediaFunction","window","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","constraints","hasGetUserMedia","mediaDevices","Promise","resolve","reject","call","Error"],"mappings":";mDAOaA,EACO,oBAAXC,SACNC,UAAUC,cACTD,UAAUE,oBACVF,UAAUG,iBACVH,UAAUI,qCAOc,SAACC,GAC3B,OAAKC,EAAeA,kBAYbN,UAAUO,aAAaN,aAAaI,GAXpCP,EAME,IAAIU,SAAQ,SAACC,EAASC,GAC3BZ,EAAqBa,KAAKX,UAAWK,EAAaI,EAASC,EAC7D,IAPSF,QAAQE,OACb,IAAIE,MAAM,uEAUlB"}