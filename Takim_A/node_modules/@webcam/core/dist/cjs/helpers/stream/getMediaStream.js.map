{"version":3,"file":"getMediaStream.js","sources":["../../../../src/helpers/stream/getMediaStream.ts"],"sourcesContent":["import type { GetMediaStreamConstraintsParams } from '../constraints';\r\nimport { getMediaStreamConstraints } from '../constraints';\r\n\r\nimport { canGetUserMedia } from './canGetUserMedia';\r\nimport { getUserMedia } from './getUserMedia';\r\n\r\n/**\r\n * Accepts custom parameters and uses getUserMedia to get an instance of the media stream\r\n *\r\n * @param {GetMediaStreamConstraintsParams} params - options for constraints generating\r\n * @param {GetMediaStreamConstraintsParams} timeLimitMs - Time limit for MediaStream request execution\r\n * @return {Promise<MediaStream>} media stream instance\r\n */\r\nexport const getMediaStream = async (\r\n  params?: GetMediaStreamConstraintsParams,\r\n  timeLimitMs?: number\r\n): Promise<MediaStream> => {\r\n  if (!canGetUserMedia()) {\r\n    throw new Error('Method getUserMedia of Navigator is not supported');\r\n  }\r\n\r\n  let mediaStream: MediaStream | undefined;\r\n  const mediaStreamConstraints = await getMediaStreamConstraints(params);\r\n\r\n  if (timeLimitMs) {\r\n    mediaStream = await new Promise((resolve, reject) => {\r\n      const timer = setTimeout(() => {\r\n        reject(new Error('User media request has reached the specified time limit'));\r\n      }, timeLimitMs);\r\n\r\n      getUserMedia(mediaStreamConstraints)\r\n        .then((result) => {\r\n          clearTimeout(timer);\r\n          return resolve(result);\r\n        })\r\n        .catch((error) => {\r\n          clearTimeout(timer);\r\n          reject(error);\r\n        });\r\n    });\r\n  } else {\r\n    mediaStream = await getUserMedia(mediaStreamConstraints);\r\n  }\r\n\r\n  if (!mediaStream) {\r\n    throw new Error('Stream of media content was not found');\r\n  }\r\n\r\n  return mediaStream;\r\n};\r\n"],"names":["getMediaStream","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","params","timeLimitMs","mediaStream","mediaStreamConstraints","wrap","_context","prev","next","canGetUserMedia","Error","getMediaStreamConstraints","sent","Promise","resolve","reject","timer","setTimeout","getUserMedia","then","result","clearTimeout","error","abrupt","stop","_x","_x2","apply","this","arguments"],"mappings":";uZAaaA,EAAc,WAAA,IAAAC,EAAAC,EAAAA,kBAAAC,wBAAAC,MAAG,SAAAC,EAC5BC,EACAC,GAAoB,IAAAC,EAAAC,EAAA,OAAAN,EAAAA,sBAAAO,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,GAEfC,EAAeA,kBAAE,CAAAH,EAAAE,KAAA,EAAA,KAAA,CAAA,MACd,IAAIE,MAAM,qDAAoD,KAAA,EAAA,OAAAJ,EAAAE,KAAA,EAIjCG,EAAAA,0BAA0BV,GAAO,KAAA,EAA1C,GAAtBG,EAAsBE,EAAAM,MAExBV,EAAW,CAAAI,EAAAE,KAAA,GAAA,KAAA,CAAA,OAAAF,EAAAE,KAAA,EACO,IAAIK,SAAQ,SAACC,EAASC,GACxC,IAAMC,EAAQC,YAAW,WACvBF,EAAO,IAAIL,MAAM,2DAClB,GAAER,GAEHgB,EAAAA,aAAad,GACVe,MAAK,SAACC,GAEL,OADAC,aAAaL,GACNF,EAAQM,EACjB,IAAE,OACK,SAACE,GACND,aAAaL,GACbD,EAAOO,EACT,GACJ,IAAE,KAAA,EAdFnB,EAAWG,EAAAM,KAAAN,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAA,OAAAF,EAAAE,KAAA,GAgBSU,EAAAA,aAAad,GAAuB,KAAA,GAAxDD,EAAWG,EAAAM,KAAA,KAAA,GAAA,GAGRT,EAAW,CAAAG,EAAAE,KAAA,GAAA,KAAA,CAAA,MACR,IAAIE,MAAM,yCAAwC,KAAA,GAAA,OAAAJ,EAAAiB,OAAA,SAGnDpB,GAAW,KAAA,GAAA,IAAA,MAAA,OAAAG,EAAAkB,OAAA,GAAAxB,EACnB,KAAA,OAAA,SApC0ByB,EAAAC,GAAA,OAAA9B,EAAA+B,MAAAC,KAAAC,UAAA,CAAA,CAAA"}