{"version":3,"file":"getWebcamSnapshot.js","sources":["../../../../src/helpers/snapshot/getWebcamSnapshot.ts"],"sourcesContent":["import type { GetVideoFrameCanvasOptions } from './getVideoFrameCanvas';\r\nimport { getVideoFrameCanvas } from './getVideoFrameCanvas';\r\n\r\nexport interface GetWebcamSnapshotOptions extends GetVideoFrameCanvasOptions {\r\n  format?: 'image/webp' | 'image/png' | 'image/jpeg';\r\n  quality?: number;\r\n}\r\n\r\n/**\r\n * Returns a base64 encoded string of the current video stream frame in the specified format and quality\r\n *\r\n * @param {HTMLVideoElement} source - video element instance with provided media stream\r\n * @param {GetWebcamSnapshotOptions} options - options for getting webcam snapshot\r\n * @return {string | undefined} media stream source\r\n */\r\nexport const getWebcamSnapshot = (\r\n  source: HTMLVideoElement,\r\n  { format = 'image/jpeg', quality = 1, ...options }: GetWebcamSnapshotOptions = {}\r\n) => {\r\n  const canvas = getVideoFrameCanvas(source, options);\r\n  if (!canvas) return;\r\n\r\n  return canvas.toDataURL(format, quality);\r\n};\r\n"],"names":["source","_ref","arguments","length","undefined","_ref$format","format","_ref$quality","quality","options","_objectWithoutProperties","_excluded","canvas","getVideoFrameCanvas","toDataURL"],"mappings":";iKAeiC,SAC/BA,GAEG,IAAAC,EAAAC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAD4E,CAAE,EAAAG,EAAAJ,EAA/EK,OAAAA,OAAS,IAAHD,EAAG,aAAYA,EAAAE,EAAAN,EAAEO,QAAAA,OAAU,IAAHD,EAAG,EAACA,EAAKE,EAAOC,EAAAA,yBAAAT,EAAAU,GAE1CC,EAASC,EAAAA,oBAAoBb,EAAQS,GAC3C,GAAKG,EAEL,OAAOA,EAAOE,UAAUR,EAAQE,EAClC"}