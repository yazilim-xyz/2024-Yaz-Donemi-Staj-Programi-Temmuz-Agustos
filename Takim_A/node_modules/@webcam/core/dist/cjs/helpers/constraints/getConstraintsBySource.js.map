{"version":3,"file":"getConstraintsBySource.js","sources":["../../../../src/helpers/constraints/getConstraintsBySource.ts"],"sourcesContent":["import { getMediaTrackSources } from '../getMediaTrackSources';\r\n\r\nconst getOptionalSourceConstraints = (id?: string) => {\r\n  if (!id) return;\r\n\r\n  return { optional: [{ sourceId: id }] } as MediaTrackConstraints;\r\n};\r\n\r\nconst getSourceIdByConstraints = (constraints?: MediaTrackConstraints | boolean) => {\r\n  if (typeof constraints !== 'object') return;\r\n\r\n  const { deviceId } = constraints;\r\n\r\n  if (typeof deviceId === 'string') return deviceId;\r\n\r\n  if (Array.isArray(deviceId)) return deviceId[0];\r\n\r\n  if (typeof deviceId === 'object' && deviceId.ideal) {\r\n    return Array.isArray(deviceId.ideal) ? deviceId.ideal[0] : deviceId.ideal;\r\n  }\r\n};\r\n\r\n// âœ… important\r\n// Deprecated web-api\r\nexport const getConstraintsBySource = async (constraints: MediaStreamConstraints) => {\r\n  const result: MediaStreamConstraints = { video: undefined, audio: undefined };\r\n\r\n  const sources = await getMediaTrackSources();\r\n  if (!sources) return result;\r\n\r\n  let videoSource: string | undefined;\r\n  let audioSource: string | undefined;\r\n\r\n  sources.forEach((source) => {\r\n    if (source.kind === 'video') {\r\n      videoSource = source.id;\r\n      return;\r\n    }\r\n\r\n    if (source.kind === 'audio') {\r\n      audioSource = source.id;\r\n    }\r\n  });\r\n\r\n  const videoSourceId = getSourceIdByConstraints(constraints.video);\r\n  const audioSourceId = getSourceIdByConstraints(constraints.audio);\r\n\r\n  result.audio = getOptionalSourceConstraints(videoSourceId ?? videoSource);\r\n  result.video = getOptionalSourceConstraints(audioSourceId ?? audioSource);\r\n\r\n  return result;\r\n};\r\n"],"names":["getOptionalSourceConstraints","id","optional","sourceId","getSourceIdByConstraints","constraints","_typeof","deviceId","Array","isArray","ideal","getConstraintsBySource","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","result","sources","videoSource","audioSource","videoSourceId","audioSourceId","wrap","_context","prev","next","video","undefined","audio","getMediaTrackSources","sent","abrupt","forEach","source","kind","stop","_x","apply","this","arguments"],"mappings":";kHAEMA,EAA+B,SAACC,GACpC,GAAKA,EAEL,MAAO,CAAEC,SAAU,CAAC,CAAEC,SAAUF,IAClC,EAEMG,EAA2B,SAACC,GAChC,GAA2B,WAAvBC,UAAOD,GAAX,CAEA,IAAQE,EAAaF,EAAbE,SAER,MAAwB,iBAAbA,EAA8BA,EAErCC,MAAMC,QAAQF,GAAkBA,EAAS,GAErB,WAApBD,EAAAA,QAAOC,IAAyBA,EAASG,MACpCF,MAAMC,QAAQF,EAASG,OAASH,EAASG,MAAM,GAAKH,EAASG,WADtE,CARqC,CAWvC,EAIaC,EAAsB,WAAA,IAAAC,EAAAC,EAAAA,kBAAAC,EAAAA,sBAAAC,MAAG,SAAAC,EAAOX,GAAmC,IAAAY,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAR,EAAAA,sBAAAS,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EACD,OAAvET,EAAiC,CAAEU,WAAOC,EAAWC,WAAOD,GAAWJ,EAAAE,KAAA,EAEvDI,EAAoBA,uBAAE,KAAA,EAA/B,GAAPZ,EAAOM,EAAAO,KACD,CAAAP,EAAAE,KAAA,EAAA,KAAA,CAAA,OAAAF,EAAAQ,OAAA,SAASf,GAAM,KAAA,EAoB+C,OAf1EC,EAAQe,SAAQ,SAACC,GACK,UAAhBA,EAAOC,KAKS,UAAhBD,EAAOC,OACTf,EAAcc,EAAOjC,IALrBkB,EAAce,EAAOjC,EAOzB,IAEMoB,EAAgBjB,EAAyBC,EAAYsB,OACrDL,EAAgBlB,EAAyBC,EAAYwB,OAE3DZ,EAAOY,MAAQ7B,EAA6BqB,QAAAA,EAAiBF,GAC7DF,EAAOU,MAAQ3B,EAA6BsB,QAAAA,EAAiBF,GAAaI,EAAAQ,OAAA,SAEnEf,GAAM,KAAA,GAAA,IAAA,MAAA,OAAAO,EAAAY,OAAA,GAAApB,EACd,KAAA,OA3BYL,SAAsB0B,GAAA,OAAAzB,EAAA0B,MAAAC,KAAAC,UAAA,CAAA,CAAA"}