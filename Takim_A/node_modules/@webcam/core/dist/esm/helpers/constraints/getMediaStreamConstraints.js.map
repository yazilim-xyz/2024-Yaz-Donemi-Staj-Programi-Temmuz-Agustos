{"version":3,"file":"getMediaStreamConstraints.js","sources":["../../../../src/helpers/constraints/getMediaStreamConstraints.ts"],"sourcesContent":["import { getConstraintsBySource } from './getConstraintsBySource';\r\nimport type { VideoTrackConstraintsOptions } from './getVideoTrackConstraints';\r\nimport { getVideoTrackConstraints } from './getVideoTrackConstraints';\r\n\r\nexport interface MediaTrackConstraintsOptions extends VideoTrackConstraintsOptions {\r\n  muted?: boolean;\r\n}\r\n\r\nexport interface GetMediaStreamConstraintsParams {\r\n  options?: MediaTrackConstraintsOptions;\r\n  constraints?: MediaStreamConstraints;\r\n}\r\n\r\n/**\r\n * Generates and returns media stream constraints by passed options\r\n *\r\n * @param {GetMediaStreamConstraintsParams} params - parameters for constraints generating\r\n * @return {Promise<MediaStreamConstraints>} media stream constraints\r\n */\r\nexport const getMediaStreamConstraints = async ({\r\n  constraints: { video = true, audio = false, ...otherConstraints } = {},\r\n  options: { muted = false, ...options } = {}\r\n}: GetMediaStreamConstraintsParams = {}) => {\r\n  let videoConstraints: MediaStreamConstraints['video'];\r\n  let audioConstraints: MediaStreamConstraints['audio'];\r\n\r\n  if ('mediaDevices' in navigator) {\r\n    audioConstraints = audio;\r\n\r\n    if (video) {\r\n      videoConstraints = await getVideoTrackConstraints(\r\n        typeof video === 'object' ? video : {},\r\n        options\r\n      );\r\n    }\r\n  } else {\r\n    const constraintsBySource = await getConstraintsBySource({ video, audio });\r\n    audioConstraints = constraintsBySource.audio;\r\n    videoConstraints = constraintsBySource.video;\r\n  }\r\n\r\n  const finalConstraints: MediaStreamConstraints = {\r\n    ...otherConstraints,\r\n    ...(!muted && {\r\n      audio: typeof audioConstraints !== 'undefined' ? audioConstraints : true\r\n    }),\r\n    video: typeof videoConstraints !== 'undefined' ? videoConstraints : true\r\n  };\r\n\r\n  return finalConstraints;\r\n};\r\n"],"names":["getMediaStreamConstraints","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref2","_ref2$constraints","_ref2$constraints2","_ref2$constraints2$vi","video","_ref2$constraints2$au","audio","otherConstraints","_ref2$options","_ref2$options2","_ref2$options2$muted","muted","options","videoConstraints","audioConstraints","constraintsBySource","finalConstraints","_args","arguments","wrap","_context","prev","next","length","undefined","constraints","_objectWithoutProperties","_excluded","_excluded2","navigator","getVideoTrackConstraints","_typeof","sent","getConstraintsBySource","_objectSpread","abrupt","stop","apply","this"],"mappings":";6UAmBaA,EAAyB,WAAA,IAAAC,EAAAC,EAAAC,IAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,UAAA,OAAArB,IAAAsB,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAEH,GACCrB,GAHED,EAAAiB,EAAAM,eAAAC,IAAAP,EAAA,GAAAA,EAAA,GAGJ,CAAE,GAFrCQ,YAAsEtB,GAA3DD,OAAA,IAAAD,EAAyD,CAAA,EAAEA,GAAvDG,MAAAA,OAAQ,IAAHD,GAAOA,EAAAE,EAAAH,EAAEI,MAAAA,OAAK,IAAAD,GAAQA,EAAKE,EAAgBmB,EAAAxB,EAAAyB,GAAAnB,EAAAR,EAC/DY,QAA2CF,GAApCD,OAAkC,IAAlCD,EAAkC,CAAA,EAAEA,GAAhCG,MAAAA,WAAKD,GAAQA,EAAKE,EAAOc,EAAAjB,EAAAmB,KAKhC,iBAAkBC,WAAS,CAAAT,EAAAE,KAAA,EAAA,KAAA,CACJ,GAAzBR,EAAmBR,GAEfF,EAAK,CAAAgB,EAAAE,KAAA,EAAA,KAAA,CAAA,OAAAF,EAAAE,KAAA,EACkBQ,EACN,WAAjBC,EAAO3B,GAAqBA,EAAQ,CAAA,EACpCQ,GACD,KAAA,EAHDC,EAAgBO,EAAAY,KAAA,KAAA,EAAAZ,EAAAE,KAAA,GAAA,MAAA,KAAA,EAAA,OAAAF,EAAAE,KAAA,GAMgBW,EAAuB,CAAE7B,MAAAA,EAAOE,MAAAA,IAAQ,KAAA,GAApES,EAAmBK,EAAAY,KACzBlB,EAAmBC,EAAoBT,MACvCO,EAAmBE,EAAoBX,MAAM,KAAA,GAQ2B,OALpEY,EAAwCkB,EAAAA,EAAAA,EAAA,CAAA,EACzC3B,IACEI,GAAS,CACZL,WAAmC,IAArBQ,GAAmCA,IAClD,CAAA,EAAA,CACDV,WAAmC,IAArBS,GAAmCA,IAAuBO,EAAAe,OAAA,SAGnEnB,GAAgB,KAAA,GAAA,IAAA,MAAA,OAAAI,EAAAgB,OAAA,GAAArC,EACxB,KAAA,OAAA,WA/BqC,OAAAJ,EAAA0C,MAAAC,KAAApB,UAAA,CAAA,CAAA"}